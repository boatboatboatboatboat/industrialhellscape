package net.boat.industrialhellscape.block.special_blocks;

import net.minecraft.core.Direction;
import net.minecraft.world.item.context.BlockPlaceContext;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.HorizontalDirectionalBlock;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.level.block.state.StateDefinition;
import net.minecraft.world.level.block.state.properties.BlockStateProperties;
import net.minecraft.world.level.block.state.properties.DirectionProperty;
import org.jetbrains.annotations.Nullable;

//INFO:
//-----
// This block, when placed, will face the player along the cardinal directions.
// It extends the vanilla block class HorizontalDirectionBlock.
// For full blocks

public class SimpleFacingBlock extends HorizontalDirectionalBlock{

    public static final DirectionProperty FACING = BlockStateProperties.HORIZONTAL_FACING;

    public SimpleFacingBlock(Properties pProperties) {
        super(pProperties);
        this.registerDefaultState(this.stateDefinition.any()
                .setValue(FACING, Direction.NORTH)); //Default state if placed with no player present
    }

    //Placement Faces the player
    @Override
    public @Nullable BlockState getStateForPlacement(BlockPlaceContext pContext) {
        Direction directionClicked = pContext.getHorizontalDirection().getOpposite(); //Gets the cardinal direction when player places new block
        //The autogenerated block item models show the "front" of the block as the right side relative to GUI screen.
        //In-world, this side faces away from the player when placed, which is not intuitive.
        //getOpposite() is used to rectify in-world placement while keeping any auto-generated asymmetric textured full-block models consistent.

        BlockState state = this.defaultBlockState().setValue(FACING, directionClicked); //First, defines facing direction of the block
        return state;
    }
    @Override
    protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> pBuilder) {
        pBuilder.add(FACING); //Block's blockstates; its NSEW orientation, its connection type defined
    }
}
